@page "/map"
@rendermode InteractiveServer

<PageTitle>map</PageTitle>





@if(hotPoints){

<div style="display: flex; flex-direction: column; align-items: center; margin-top: 1.5%;">
    <!-- Labels above the bar -->
    
    <div style="width: 60%; display: flex; justify-content: space-between; margin-bottom: 5px; margin-right: 5%; font-size: 14px;">
        <span style="font-weight: bold;">Most Active</span>
        <span style="font-weight: bold; margin-right: 75%;">Least Active</span>
    </div>

    <!-- Bar and checkboxes in one row -->
    <div style="display: flex; align-items: center; width: 65%; gap: 20px; margin-right: 0%">
        <!-- Gradient Bar -->

        
        <div style="
            flex: 1;
            height: 20px;
            border-radius: 10px;
            background: linear-gradient(90deg, red, orange, yellow, green, blue);
            box-shadow: 0 0 5px rgba(0,0,0,0.2);
        ">
        </div>

        


        
<div style="margin-left: 50%; ">
        <!-- Checkboxes -->
        <label class="custom-checkbox panels-color" style="margin-right: 10px;">
            <input type="checkbox" @bind="panels" />Panels  
        </label>

        <label class="custom-checkbox readers-color" style="margin-right: 10px;">
            <input type="checkbox" @bind="readers" />Readers  
        </label>

        <label class="custom-checkbox hotpoints-color">
            <input type="checkbox" @bind="hotPoints" />Hot Points  
        </label>

        </div>
    </div>
</div>

}

else{
           
<div style="margin-left: 66%; margin-top: 2.92%;">
        <!-- Checkboxes -->
        <label class="custom-checkbox panels-color" style="margin-right: 10px;">
            <input type="checkbox" @bind="panels" />Panels  
        </label>

        <label class="custom-checkbox readers-color" style="margin-right: 10px;">
            <input type="checkbox" @bind="readers" />Readers  
        </label>

        <label class="custom-checkbox hotpoints-color">
            <input type="checkbox" @bind="hotPoints" />Hot Points  
        </label>

        </div>
    


}

@if(panels){
// Welding Area
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(39)"
   style="
       position: absolute;
       top: 210px;
       left: 795px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// Storage Room
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(34)"
   style="
       position: absolute;
       top: 560px;
       left: 350px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// CEM BLGD #1
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(285)"
   style="
       position: absolute;
       top: 510px;
       left: 820px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// CEM BLGD #2
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(286)"
   style="
       position: absolute;
       top: 545px;
       left: 800px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// Tank Farm
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(322)"
   style="
       position: absolute;
       top: 425px;
       left: 1000px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// Cntrl Rm
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(182)"
   style="
       position: absolute;
       top: 480px;
       left: 960px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// Load Doc
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(323)"
   style="
       position: absolute;
       top: 450px;
       left: 1100px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// Main Gate
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(25)"
   style="
       position: absolute;
       top: 500px;
       left: 1100px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// Admin
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(274)"
   style="
       position: absolute;
       top: 240px;
       left: 1310px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>

// CEM BLGD #3
<i class="fas fa-pager"
   @onclick="() => OnPanelClick(287)"
   style="
       position: absolute;
       top: 470px;
       left: 1280px;
       color: red;
       font-size: 42px;
       z-index: 10;">
</i>


}

@if(readers){

    //Storage Room

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 560px;
           left: 370px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //CEM BLGD #1

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 510px;
           left: 790px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //CEM BLGD #2
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 545px;
           left: 830px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //CEM BLGD #3
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 470px;
           left: 1250px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //Tank Farm
     <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 405px;
           left: 1025px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 440px;
           left: 1030px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //Load Doc
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 410px;
           left: 1100px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 420px;
           left: 1070px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 450px;
           left: 1150px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //Admin
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 250px;
           left: 1230px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 210px;
           left: 1230px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 280px;
           left: 1310px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 250px;
           left: 1400px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 210px;
           left: 1400px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 200px;
           left: 1310px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 240px;
           left: 1270px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //Cntrl Rm
     <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 520px;
           left: 960px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 520px;
           left: 1040px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 520px;
           left: 1000px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 520px;
           left: 920px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 510px;
           left: 890px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 470px;
           left: 890px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 440px;
           left: 960px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 400px;
           left: 950px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 390px;
           left: 900px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 420px;
           left: 880px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    //Main Gate
     <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 520px;
           left: 1075px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 520px;
           left: 1125px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 510px;
           left: 1160px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 480px;
           left: 1190px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

//Welding Area
    <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 205px;
           left: 755px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

     <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 250px;
           left: 795px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

     <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 210px;
           left: 830px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

     <i class="fas fa-map-marker-alt"
     @onclick="OnReaderClick"
       style="
           position: absolute;
           top: 250px;
           left: 755px;
           color: green;
           font-size: 42px;
           z-index: 10;">
    </i>

}


@if (IsPanelVisible)
{
    <div class="modal-backdrop" @onclick="HideModal" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 9999;">
    <div class="modal-content" @onclick:stopPropagation 
         style="background: rgb(0, 0, 0); padding: 20px; border-radius: 12px; border: 2px solid white; max-width: 500px; width: 90%; box-shadow: 0 10px 25px rgba(0,0,0,0.2);">
        
        <h3 style="text-align: center; font-size: 45px;">Pannel @pannelNum</h3>
        
        <div class="modal-body" style="margin-top: 10px;">
            @ChildContent

            @* info *@
            <div style="">
                        <h1 style="font-size: 30px; "><u>Info</u></h1>
                        <p style="font-size: 20px;">Scans: @panelScans</p>
            </div>

            @* Issues *@
             <div style="">
                <h1 style="font-size: 30px; margin-bottom: 0.5cm;"><u>Issues</u></h1>
                @foreach(var s in CheckForPotentialIssuesWithPanel(Upload.Entries).Take(4)){
                if(!s.Equals("No issues detected with machines or readers.")){
                <div  style="display: flex; align-items: flex-start; gap: 20px; width: 12cm;">
                <img src="images/error.jpeg" alt="Error Img" width="35" height="35" style="">
                <h3 style="font-size: 17px; margin-bottom: 5%; margin-top: 1%;">@s</h3>
                </div>
                }
                else{
                    <div  style="display: flex; align-items: flex-start; gap: 20px; width: 12cm; margin-right: 10cm;">
                    <img src="images/check.png" alt="Error Img" width="35" height="35" style="">
                    <h3 style="font-size: 17px; margin-bottom: 5%; margin-top: 1%;">@s</h3>
                </div>
                }
            }
                        
            </div>

            @* Connected Readers *@
             <div style="">
                <h1 style="font-size: 30px;"><u>Connected Readers</u></h1>
                @foreach(int i in panelReaders){
                <button   @onclick="@(() => HandleButtonClick("Reader " + i))" style="padding: 10px 20px; color: white; border: none; border-radius: 5px; font-size: 23px;">
                    • <u style="margin-left: 0.5cm;"> @i</u>

                   
              
                </button>
                }
                        
            </div>
            

        </div>
    </div>
    </div> 

}


 


<div style="text-align: center; margin-top: 5px;">
    <img src="images/map1.jpeg" alt="OGE map" width="67%" height="50%" />
</div>




<style>
    body {
        background-color: black;
        color: white;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    input {
        color-scheme: dark;
    }

    .custom-checkbox input[type="checkbox"] {
        appearance: none;
        width: 20px;
        height: 20px;
        border: 2px solid #ccc;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 5px;
        vertical-align: middle;
    }

    .custom-checkbox input[type="checkbox"]:checked {
        background-color: currentColor;
       
    }

    .panels-color input[type="checkbox"] {
        color: red;
    }

    .readers-color input[type="checkbox"] {
        color: green;
    }

    .hotpoints-color input[type="checkbox"] {
        color: linear-gradient(90deg, red, orange, yellow, green, blue);
        
    }

    .hotpoints-color input[type="checkbox"]:checked {
        background: linear-gradient(90deg, red, orange, yellow, green, blue);
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">


@code {
    private bool panels = true;
    private bool readers = false;
    private bool hotPoints = false;

    public static bool IsPanelVisible { get; set; }

   

    public static RenderFragment ChildContent { get; set; }

    public static int pannelNum;

    public static int panelScans;


     public static List<string> panelIssues = new List<string>();

    public static List<int> panelReaders = new List<int>();

    public static void OnPanelClick(int i)
    {
       Console.WriteLine($"Pannel clicked! {i}");
       pannelNum = i;
       panelScans = GetPanelScanCount(i);
       panelIssues.Clear();
       panelIssues.Add("No issues detected with machines or readers.");
       panelReaders.Clear();
       panelReaders.Add(4);

       IsPanelVisible = true;

    }

     void HideModal()
{
    IsPanelVisible = false;
    
    
}

public static int GetPanelScanCount(int machineId)
{
    return Upload.Entries
        .Where(e => e.Machine == machineId)  
        .Count();  
}


private void HandleButtonClick(string message)
{
    Console.WriteLine($"Button clicked with message: {message}");
}


  
    private void OnReaderClick()
    {
        Console.WriteLine("Reader clicked!");
        // Or do something Blazor-y like opening a modal, showing details, etc.
    }



public static List<string> CheckForPotentialIssuesWithPanel(List<Upload.ReaderEvent> entries)
{
    entries =  entries.Where(e => e.Machine == pannelNum).ToList();

    int SCAN_THRESHOLDForPannel = Upload.SCAN_THRESHOLDForPannel; 

    int nearPannel = Upload.nearPannel;

    @* int SCAN_THRESHOLDForReader = Upload.SCAN_THRESHOLDForReader; 
    int nearReader = Upload.nearReader;
    int closingTime = Upload.closeTime;

    int openingTime = Upload.openTime; *@

//Does not account for Day lights saving time and only works for UTE to CTE. Regular is +6 but its DST
    @* int openingTimeUtc = openingTime +  5;
    int closingTimeUtc = closingTime + 5 ;
    if(closingTimeUtc > 12){
        closingTimeUtc -= 12;
    } *@

    List<string> issues = new List<string>();

    @* var afterHours = entries
    .Where(e => 
    DateTime.Parse(e.Time).Hour < openingTimeUtc || DateTime.Parse(e.Time).Hour > closingTimeUtc)
    .Select(e => new { e.IDHash, e.Time, e.ReaderDesc })
    .ToList(); *@


   
    var machineIssuesOver = entries
        .GroupBy(e => e.Machine)  
        .Where(g => g.Count() >= SCAN_THRESHOLDForPannel)
        .Select(g => new { Machine = g.Key, Count = g.Count() })
        .ToList();

         var machineIssuesNear = entries
        .GroupBy(e => e.Machine)  
        .Where(g => g.Count() + nearPannel >= SCAN_THRESHOLDForPannel && g.Count() < SCAN_THRESHOLDForPannel)
        .Select(g => new { Machine = g.Key, Count = g.Count() })
        .ToList();


       



    if (machineIssuesOver.Any() && Upload.PanelsOver)
    {
        foreach (var issue in machineIssuesOver)
        {
            issues.Add($"Panel {issue.Machine} has {issue.Count} scans. Over threshold of {SCAN_THRESHOLDForPannel}");
        }
    }

   
@* 
     if (afterHours.Any() && Upload.afterHoursBool)
    {
        foreach (var scan in afterHours)
            {
                issues.Add($"{scan.IDHash.Substring(0,10)} scanned at {scan.ReaderDesc} at {scan.Time} — outside regular hours.");
            }
    } *@

    if (machineIssuesNear.Any() && Upload.PanelsNear)
    {
        foreach (var issue in machineIssuesNear)
        {
            issues.Add($"Panel {issue.Machine} : {issue.Count} scans. Near threshold of {SCAN_THRESHOLDForPannel}");
        }
    }

    


   
    if (!issues.Any())
    {
        issues.Add("No issues detected with machines or readers.");
    }

    return issues;
}

}
