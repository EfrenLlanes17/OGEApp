@page "/"

@rendermode InteractiveServer

<PageTitle>Upload</PageTitle>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<style>
    body {
        background-color: black;
        color: white;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif
    }
</style>

<h1 style="font-weight: bold; text-align: center; ">Welcome To</h1>

<img src="https://www.marketbeat.com/logos/oge-energy-corp-logo.jpg" alt="Inflow Logo" width="75" height="25" style="align-content: center;">


<label for="fileUpload" class="btn btn-primary rounded-pill"
       style="background-color: black; color: white; font-weight: bold; font-size: 20px; width: 15%; border-width: 1mm; border-color: white; cursor: pointer; text-align: center;">
    Upload File
    <InputFile id="fileUpload" OnChange="HandleFileSelected" accept=".csv" style="display: none;" />
</label>


<button @onclick="fileCSVHandler.clearFileContentsVar">Clear fileContents Var</button>

@* <pre>@fileCSVHandler.fileContents</pre> *@
<pre>@fileCSVHandler.ConvertCsvTo2DArray(fileCSVHandler.fileContents)[0,0]</pre>

@* [0,0] is top left corner
[1,0] is one down from top left corner 
set up as [y,x] i know its goofy sorry*@

@code {


    public class fileCSVHandler{

        public static string fileContents { get; set; } = "Default Value";

        public static string fileContentsArray { get; set; } = "Default Value";

        public event Action OnChange;

         public void SetFileValue(string value) {
        fileContents = value;
        NotifyStateChanged();
        }

        public static void clearFileContentsVar() {
            fileContents = "Default Value";
        }


         public static string[,] ConvertCsvTo2DArray(string csv){
            if(csv != "Default Value"){
        var lines = csv.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
        var rows = lines.Length;
        var cols = lines[0].Split(',').Length;

        string[,] table = new string[rows, cols];

        for (int i = 0; i < rows; i++)
        {
            var values = lines[i].Split(',');
            for (int j = 0; j < cols; j++)
            {
                table[i, j] = values[j];
            }
        }

        return table;
        }
        else{
            string[,] table = new string[1, 1];
            table[0,0] = "Hello";
            return table;
        }
    }


        private void NotifyStateChanged() => OnChange?.Invoke();



    }




    private string csvContent;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var stream = file.OpenReadStream())
            using (var reader = new StreamReader(stream))
            {
                fileCSVHandler.fileContents = await reader.ReadToEndAsync();
            }
        }
    }


    
}





    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


